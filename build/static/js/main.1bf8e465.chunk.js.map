{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bf8e465.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text , onClick}) => {\r\n    return <button style= {{backgroundColor: color}}\r\n    className= \"btn\" onClick= {onClick}>{text}</button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({title , onAdd, showAdd }) => {\r\n    return (\r\n        <header className= \"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd? 'red': 'green'} text= {showAdd ? 'Close' : 'Add'}  onClick= \r\n            {onAdd} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: \"Task Tracker\"\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string, \r\n}\r\n  \r\n\r\nexport default Header\r\n","import { icons } from \"react-icons\"\r\nimport {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className= {`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick= {() => onToggle(task.id)}>\r\n            <h3>{task.text} \r\n            <FaTimes style= {{color:\"red\", cursor: 'pointer'}}\r\n             onClick= {() => onDelete(task.id)} />\r\n             </h3>\r\n            <p>{task.day}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task.js'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n            <Task key = {task.id} task= {task}\r\n            onDelete= {onDelete} \r\n            onToggle= {onToggle}\r\n            />\r\n             ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n\r\n    const onSubmit= (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add task')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <form className= 'add-form' onSubmit= {onSubmit }>\r\n            <div className= 'form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add task' value={text}\r\n                 onChange={(e) => setText(e.target.value)}></input>\r\n            </div>\r\n            <div className= 'form-control'>\r\n                <label>Day and Time</label>\r\n                <input type='text' placeholder='Add Day and time' value={day}\r\n                 onChange={(e) => setDay(e.target.value)}></input>\r\n            </div>\r\n            <div className= 'form-control from-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input\r\n                 type='checkbox'\r\n                 checked= {reminder}\r\n                 value={reminder}\r\n                 onChange={(e) => \r\n                 setReminder(e.currentTarget.checked)\r\n                 }></input>\r\n            </div>\r\n\r\n            <input className='btn btn-block' type= 'submit' value= 'Save Task'></input>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import {useState} from 'react'\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\n\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask]= useState(false) \n  const [tasks, setTasks] = useState(\n    [  {\n            id: 1,\n            text: 'doctors apponintment',\n            day: 'feb 5th at 2:30 pm',\n            reminder: true,\n        },\n        {\n            id: 2,\n            text: 'meeting at school',\n            day: 'feb 7th at 1:30 pm',\n            reminder: true,\n        },\n        {\n            id: 3,\n            text: 'food shopping',\n            day: 'feb 8th at 5:30 pm',\n            reminder: false,\n        },\n    ]\n    )\n\n//Add Task\nconst addTask = (task) => {\n const id= Math.floor(Math.random()* 1000 + 1)\n const newTask = {id, ...task}\n setTasks([...tasks, newTask])\n}\n\n\n//Delete Task\nconst deleteTask= (id) => {\n  setTasks(tasks.filter((task) => task.id !==id))\n}\n\n//Toggle Reminder \nconst toggleReminder= (id) => {\n  setTasks(tasks.map((task) => task.id === id ?{ ...task, reminder: !task.reminder} : task))\n}\n\n  return (\n    <div className=\"container\">\n        <Header onAdd= {() => setShowAddTask(!showAddTask)} showAdd= {showAddTask} />\n        {showAddTask && <AddTask onAdd= {addTask}/>}\n        {\n           tasks.length>0 ?\n          <Tasks tasks= {tasks} onDelete= {deleteTask} onToggle= {toggleReminder} />\n          : \"No Tasks\"\n        }\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}